<!--
  ~ Copyright 2003-2022 The IdeaVim authors
  ~
  ~ Use of this source code is governed by an MIT-style
  ~ license that can be found in the LICENSE.txt file or at
  ~ https://opensource.org/licenses/MIT.
  -->

<idea-plugin url="https://plugins.jetbrains.com/plugin/164" xmlns:xi="http://www.w3.org/2001/XInclude">
  <name>IdeaVim</name>
  <id>IdeaVIM</id>
  <change-notes><![CDATA[
    <h3>Fixes:</h3>
    <ul>
      <li><a href="https://youtrack.jetbrains.com/issue/VIM-2797">VIM-2797</a> Introduce variable to mute default argtextobj
        mappings
      </li>
      <li><a href="https://youtrack.jetbrains.com/issue/VIM-758">VIM-758</a> Support d mappings</li>
      <li><a href="https://youtrack.jetbrains.com/issue/VIM-2577">VIM-2577</a> Fix paste at the end of notebook cell</li>
      <li><a href="https://youtrack.jetbrains.com/issue/VIM-2813">VIM-2813</a> Migrate update checker to
        VimStandalonePluginUpdateChecker
      </li>
    </ul>

    <h3>Merged PRs:</h3>
    <ul>
      <li><a href="https://github.com/JetBrains/ideavim/pull/558">558</a> by <a href="https://github.com/citizenmatt">Matt
        Ellis</a>: Fix incorrect normalising for trailing inlay
      </li>
      <li><a href="https://github.com/JetBrains/ideavim/pull/554">554</a> by <a href="https://github.com/citizenmatt">Matt
        Ellis</a>: Refactor &quot;last column&quot; calculations
      </li>
      <li><a href="https://github.com/JetBrains/ideavim/pull/553">553</a> by <a href="https://github.com/citizenmatt">Matt
        Ellis</a>: Rearrange and rename some code in engine
      </li>
      <li><a href="https://github.com/JetBrains/ideavim/pull/560">560</a> by <a
          href="https://github.com/Runinho">Runinho</a>: Fix(VIM-2577) paste not working at end of notebook cell
      </li>
      <li><a href="https://github.com/JetBrains/ideavim/pull/571">571</a> by <a href="https://github.com/adaext">Ada</a>:
        Remove the redundant quotation mark at the end of &quot;packadd matchit&quot; command
      </li>
    </ul>
    ]]>
  </change-notes>
  <description><![CDATA[
      <p>Vim engine for JetBrains IDEs</p>
      <br/>
      <p>IdeaVim supports many Vim features including normal/insert/visual modes, motion keys, deletion/changing,
      marks, registers, some Ex commands, Vim regexps, configuration via ~/.ideavimrc, macros, Vim plugins, etc.</p>
      <br/>
      <p>See also:</p>
      <ul>
        <li><a href="https://github.com/JetBrains/ideavim">GitHub repository</a>: documentation and contributing</li>
        <li><a href="https://youtrack.jetbrains.com/issues/VIM">Issue tracker</a>: feature requests and bug reports</li>
      </ul>
    ]]></description>
  <version>SNAPSHOT</version>
  <vendor>JetBrains</vendor>

  <!-- Please search for "[VERSION UPDATE]" in project in case you update the since-build version -->
  <!-- Check for [Version Update] tag in YouTrack as well -->
  <!-- Also, please update the value in build.gradle.kts file-->
  <idea-version since-build="223.7401.7"/>

  <!-- Mark the plugin as compatible with RubyMine and other products based on the IntelliJ platform (including CWM) -->
  <depends>com.intellij.modules.platform</depends>
  <resource-bundle>messages.IdeaVimBundle</resource-bundle>

  <!-- IDE-Specific configurations -->
  <!--suppress PluginXmlValidity -->
  <depends optional="true" config-file="ides/ideavim-withRider.xml">com.intellij.modules.rider</depends>
  <!--suppress PluginXmlValidity -->
  <depends optional="true" config-file="ides/ideavim-withAppCode.xml">com.intellij.modules.appcode</depends>
  <depends optional="true" config-file="ideavim-withAceJump.xml">AceJump</depends>

  <applicationListeners>
    <listener class="com.maddyhome.idea.vim.PyNotebooksCloseWorkaround"
              topic="com.intellij.openapi.project.ProjectManagerListener"/>
  </applicationListeners>

  <application-components>
    <component>
      <implementation-class>com.maddyhome.idea.vim.DynamicLoaderStopper</implementation-class>
    </component>
  </application-components>

  <extensionPoints>
    <extensionPoint name="vimExtension" beanClass="com.maddyhome.idea.vim.extension.ExtensionBeanClass" dynamic="true">
      <with attribute="implementation" implements="com.maddyhome.idea.vim.extension.VimExtension"/>

    </extensionPoint>
    <extensionPoint name="vimLibraryFunction"
                    beanClass="com.maddyhome.idea.vim.vimscript.model.functions.FunctionBeanClass" dynamic="true">
      <with attribute="implementation" implements="com.maddyhome.idea.vim.vimscript.model.functions.FunctionHandler"/>
    </extensionPoint>
    <!--    For internal use only -->
    <extensionPoint name="vimAction" beanClass="com.maddyhome.idea.vim.handler.ActionBeanClass" dynamic="true">
      <with attribute="implementation" implements="com.maddyhome.idea.vim.handler.EditorActionHandlerBase"/>
    </extensionPoint>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <applicationConfigurable groupId="editor" instance="com.maddyhome.idea.vim.ui.VimEmulationConfigurable"/>
    <projectService serviceImplementation="com.maddyhome.idea.vim.group.NotificationService"/>
    <projectService serviceImplementation="com.maddyhome.idea.vim.group.LastTabService"/>
    <statusBarWidgetFactory implementation="com.maddyhome.idea.vim.ui.StatusBarIconFactory"/>
    <statusBarWidgetFactory implementation="com.maddyhome.idea.vim.ui.ShowCmdStatusBarWidgetFactory" order="first"/>

    <applicationService serviceImplementation="com.maddyhome.idea.vim.VimPlugin"/>

    <!-- Initialise as early as possible so that we're ready to edit quickly. This is especially important for Rider,
         which (at least for 2020.1) has some long running activities that block other startup extensions. None of the
         core platform activities have IDs, so we can't use "before ID". We have to use "first" -->
    <postStartupActivity implementation="com.maddyhome.idea.vim.PluginStartup" order="first"/>

    <editorFloatingToolbarProvider implementation="com.maddyhome.idea.vim.ui.ReloadFloatingToolbar"/>

    <actionPromoter implementation="com.maddyhome.idea.vim.key.VimActionsPromoter" order="last"/>

    <spellchecker.bundledDictionaryProvider implementation="com.maddyhome.idea.vim.VimBundledDictionaryProvider"/>

    <notificationGroup displayType="STICKY_BALLOON" id="ideavim-sticky"/>

    <statistics.applicationUsagesCollector implementation="com.maddyhome.idea.vim.statistic.PluginState"/>
    <statistics.applicationUsagesCollector implementation="com.maddyhome.idea.vim.statistic.OptionsState"/>
    <statistics.applicationUsagesCollector implementation="com.maddyhome.idea.vim.statistic.VimscriptState"/>
    <statistics.applicationUsagesCollector implementation="com.maddyhome.idea.vim.statistic.ShortcutConflictState"/>

    <statistics.counterUsagesCollector implementationClass="com.maddyhome.idea.vim.statistic.ActionTracker"/>
  </extensions>

  <xi:include href="/META-INF/includes/ApplicationServices.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/includes/VimActions.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/includes/VimExtensions.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/includes/VimListeners.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/includes/VimLibraryFunctions.xml" xpointer="xpointer(/idea-plugin/*)"/>

  <actions resource-bundle="messages.IdeaVimBundle">
    <action id="VimPluginToggle" class="com.maddyhome.idea.vim.action.VimPluginToggleAction">
      <add-to-group group-id="ToolsMenu" anchor="last"/>
    </action>

    <!-- Internal -->
    <!--suppress PluginXmlI18n -->
    <action id="VimInternalAddBlockInlays" class="com.maddyhome.idea.vim.action.internal.AddBlockInlaysAction" text="Add Test Block Inlays | IdeaVim Internal" internal="true"/>
    <!--suppress PluginXmlI18n -->
    <action id="VimInternalAddInlineInlays" class="com.maddyhome.idea.vim.action.internal.AddInlineInlaysAction" text="Add Test Inline Inlays | IdeaVim Internal" internal="true"/>

    <action id="VimShortcutKeyAction" class="com.maddyhome.idea.vim.action.VimShortcutKeyAction"/>
    <action id="VimActions" class="com.maddyhome.idea.vim.ui.VimActions"/>

    <group id="IdeaVim.ReloadVimRc.group" class="com.maddyhome.idea.vim.ui.ReloadFloatingToolbarActionGroup">
      <action id="IdeaVim.ReloadVimRc.reload" class="com.maddyhome.idea.vim.ui.ReloadVimRc"
              use-shortcut-of="ExternalSystem.ProjectRefreshAction">
      </action>
    </group>

    <action id="VimFindActionIdAction" class="com.maddyhome.idea.vim.listener.FindActionIdAction"/>

    <action id="VimShowHoverInfoTooltip" class="com.maddyhome.idea.vim.action.ShowInfoTooltipAction" />
  </actions>
</idea-plugin>
